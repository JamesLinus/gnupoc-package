#!/usr/bin/perl

use strict;

require File::Spec::Unix;

my $do_symlink = 0;

sub do_rename($$$) {
  my $src = shift;
  my $destdir = shift;
  my $destname = shift;
  my $dest = "$destdir/$destname";
  if ($do_symlink) {
    # Ignore errors, which occur on case insensitive file systems
    symlink(File::Spec::Unix->abs2rel($src, $destdir), "$dest");
  } else {
    rename("$src", "$dest") || die("Rename: $!\n");
  }
}

sub mergedir($$) {
  my $src = shift;
  my $dest = shift;

  opendir(IN, $src) || die("$src: $!\n");
  my @dir = readdir IN;
  closedir IN;

  foreach my $i (@dir) {
    next if($i eq ".");
    next if($i eq "..");
    if(-d "$src/$i") {
      if(-e "$dest/$i") {
        mergedir("$src/$i", "$dest/$i");
      } else {
        do_rename("$src/$i", $dest, $i);
      }
    } else {
      do_rename("$src/$i", $dest, $i);
    }
  }
  rmdir($src) if (!$do_symlink);
  return 1;
}

sub dodir($) {
  my $dir = shift;

  opendir(IN, $dir) || die("$dir: $!\n");
  my @dir = readdir IN;
  closedir IN;

  foreach my $i (@dir) {
    next if($i eq ".");
    next if($i eq "..");
    if(-d "$dir/$i") {
      dodir("$dir/$i");
    } else {
      my $new = lc($i);
      $new =~ s/libGLES_CM/libGLES_CM/i;
      $new =~ s/libGLESv2/libGLESv2/i;
      $new =~ s/libOpenVG/libOpenVG/i;
      if($i ne $new) {
        #print "FILE: $i -> $new\n";
        do_rename("$dir/$i", $dir, $new);
      }
    }
  }

  my @dirs = split('/', $dir);
  my $ldir = pop(@dirs);
  my $newname = lc($ldir);
  $newname = uc($ldir) if (uc($ldir) eq "GLES");
  $newname = uc($ldir) if (uc($ldir) eq "GLES2");
  $newname = uc($ldir) if (uc($ldir) eq "EGL");
  if($ldir ne $newname) {
    my $ndir = join('/', @dirs);
    my $parent = $ndir;
    if($ndir) {
      $ndir .= "/" . $newname;
    } else {
      $parent = ".";
      $ndir = $newname;
    }
    #print "DIR:  $dir -> $ndir\n";
    if(-d $ndir) {
      mergedir($dir, $ndir) || die("Merge: $!\n");
    } else {
      do_rename("$dir", $parent, $newname);
    }
  }
}

my @paths;
foreach my $arg (@ARGV) {
        if ($arg eq "-symlink") {
                $do_symlink = 1;
        } else {
                push @paths, $arg;
        }
}
die("Usage: lowercase dir\n") if(@paths != 1);
dodir($paths[0]);
