# 1 ""
 







 
NAME    EXSL

 

# 1 "/home/martin/symbian-sdks/gnupoc-s60_12/epoc32/include/eikon.rh" 1
# 1 "/home/martin/symbian-sdks/gnupoc-s60_12/epoc32/include/eikon.hrh" 1



# 1 "/home/martin/symbian-sdks/gnupoc-s60_12/epoc32/include/uikon.hrh" 1



# 1 "/home/martin/symbian-sdks/gnupoc-s60_12/epoc32/include/eikcolor.hrh" 1
 
 
 
 





















































































# 4 "/home/martin/symbian-sdks/gnupoc-s60_12/epoc32/include/uikon.hrh" 2



 







 
 
 
 






 
 
 
 

 


 





























 

enum TAknEditorNumericKeymap
	{
	EAknEditorStandardNumberModeKeymap,
	EAknEditorPlainNumberModeKeymap,
	EAknEditorCalculatorNumberModeKeymap,
	EAknEditorConverterNumberModeKeymap,
	EAknEditorToFieldNumberModeKeymap,
	EAknEditorFixedDiallingNumberModeKeymap,		
	EAknEditorSATNumberModeKeymap,
	EAknEditorSATHiddenNumberModeKeymap,
	EAknEditorReservedInternalUseKeymap = 100	 
	};












 


 













 
 
 
 











enum EEikLabelStandardFont
	{
	EEikLabelFontNormal,
	EEikLabelFontLegend,
	EEikLabelFontAnnotation
	};
	
 
 
 
 





 
 
 
 









 
 
 
 










 
 



 





 


 
 
 
 

 






 




 













 
 
 
 





















 





 
 
 
 




 
 
 
 






















enum TEikAppResourceFileStandardOffset
	{
	ESignatureResourceOffset=1,
	EDefaultNameResourceOffset,
	EAppInfoResourceOffset
	};

 
 





































 
 
 
 






































































 
 
 
 

enum TEikStockControls
	{
	EEikCtCommandButton,
	EEikCtLabeledButton,
	EEikCtEdwin,
	EEikCtRichTextEditor,
	EEikCtSecretEd,
	EEikCtCheckBox,
	EEikCtChoiceList,
	EEikCtOptionButton,
	EEikCtHorOptionButList,
	EEikCtFileNameSel,
	EEikCtFileNameEd,
	EEikCtFolderNameSel,
	EEikCtFolderNameEd,
	EEikCtDriveNameSel,
	EEikCtListBox,
	EEikCtCharMap,
	EEikCtCharEd,
	EEikCtImage,
	EEikCtImageArray,
	EEikCtLabel,
	EEikCtComboBox,
	EEikCtProgInfo,
	EEikCtFlPtEd,
	EEikCtFxPtEd,
	EEikCtTwipsEd,
	EEikCtNumberEditor,
	EEikCtRangeEditor,
	EEikCtTimeEditor,
	EEikCtDateEditor,
	EEikCtTimeAndDateEditor,
	EEikCtDurationEditor,
	EEikCtTimeOffsetEditor,
	EEikCtLatitudeEditor_Not_Supported,
	EEikCtLongitudeEditor_Not_Supported,
	EEikCtBorderPreview,
	EEikCtFontPreview,
	EEikCtGraySelector,
	EEikCtWorldSelector,
	EEikCtGlobalTextEditor,
	EEikCtSoundSelector,
	EEikCtClock,
	EEikCtPrintPreview,
	EEikCtMenuButton,
	EEikCtDirContentsListBox,
	EAknCtIpFieldEditor,
	EEikCtCalendar,
	EEikCtSpacer,
	EEikCtColListBox,
	EEikCtRangeRefEditor,
	EEikCtTextButton,
	EEikCtBitmapButton,
	EEikCtDialogToolBar,
	EEikCtFileBrowser,
	EEikCtFileNameLabel,
	EEikCtUnifiedFileSel,
	EEikCtTelephoneNumberEditor,
	EEikCtTwoPictureCommandButton,
	EEikCtInverterCommandButton,
	EEikCtScrollBar,
	EEikCtArrowHeadScrollBar
	};

 
enum TEikStockButtonGroupControls
	{
	EEikBgToolBar,
	EEikBgButtonPanel,
	EEikBgCba
	};

 
 
 
 















































































 







 






 






 











 







 
									 



 




 














































































































 
 
 
 
 
















 

 





 





































 
 
 
 

 




 









 



 



 















# 4 "/home/martin/symbian-sdks/gnupoc-s60_12/epoc32/include/eikon.hrh" 2

# 1 "/home/martin/symbian-sdks/gnupoc-s60_12/epoc32/include/lafpublc.hrh" 1
 
 
 
 




enum TLafReferenceButtonGroupControls
	{
	ELafBgCba=100
	};


# 5 "/home/martin/symbian-sdks/gnupoc-s60_12/epoc32/include/eikon.hrh" 2


 
 
 
 
 












 
 
 
 





enum
	{
	EDialDlgButFreeDial=1,
	EDialDlgButDial,
	EDialDlgButDialOut,
	EFreeDialDlgButClear,
	EFreeDialDlgButRedial,
	EDialDlgEdwin1,
	EDialDlgEdwin2,
	EDialDlgEdwin3,
	EDialDlgEdwin4,
	EDialDlgEdwin5,
	EFreeDialDlgEdwin
	};

 
 
 
 

 
 
 
 

 
 
 
 




 
























 
 
 
 
 




 
 
 
 
 



 
 
 
 
 







































 
 
 
 
 







 
 
 
 




 



 
 
 





 
 
 
 


enum TEikProgressTextType
	{
	EEikProgressTextNone,
	EEikProgressTextPercentage,
	EEikProgressTextFraction
	};

 
 
 
 






 
 
 
 









 










 
 
 
 
 












 
 
 
 
 







enum
	{
	EEikCidImageType=1
	};

 
 
enum
	{
	EEikPopupOnTop = 1100,
	EEikPopupGone
	};

 
enum
	{
	EEikKeyLockEnabled = 1110,
	EEikKeyLockDisabled = 1111,
    EEikLeyLockDisabled = 1111,   
	EEikKeyLockPowerKeyPressed
	};

 
 
 
 
 

enum
	{
	EEikHeapFailSettingListId = 999
	};


# 1 "/home/martin/symbian-sdks/gnupoc-s60_12/epoc32/include/eikon.rh" 2

# 1 "/home/martin/symbian-sdks/gnupoc-s60_12/epoc32/include/uikon.rh" 1




# 1 "/home/martin/symbian-sdks/gnupoc-s60_12/epoc32/include/badef.rh" 1
 
 
 
 




STRUCT BA_RSS_SIGNATURE
    {
    LONG signature=0;  
    SRLINK self;
    }

STRUCT TBUF
    {
    BUF buf;  
    }

STRUCT LBUF
    {
    LTEXT txt;  
    }

STRUCT ARRAY
    {
    STRUCT items[];
    }

STRUCT UID_NAME_PAIR
	{
	LONG uid;
	STRUCT name;  
	}



# 5 "/home/martin/symbian-sdks/gnupoc-s60_12/epoc32/include/uikon.rh" 2







STRUCT RESOURCE_LINK
	{
	LLINK id;
	}

STRUCT BTG_RESOURCE_COLLECTION
    {
    STRUCT btg_sets[];
    STRUCT btg_buttons[];
    }

 
 
 
 


# 39 "/home/martin/symbian-sdks/gnupoc-s60_12/epoc32/include/uikon.rh"

STRUCT EDWIN
    {
    LONG flags=0;
    WORD width=0;
    WORD lines=1;
    WORD maxlength=0;
	WORD default_case= 0x4 ;	WORD allowed_case_modes= 0x1  | 0x2  | 0x4  ;	WORD numeric_keymap=EAknEditorStandardNumberModeKeymap;	WORD allowed_input_modes= 0x1  | 0x2  | 0x4  ;	WORD default_input_mode= 0x1 ;	LLINK special_character_table=-1;	WORD avkon_flags= 0x000 ;	WORD max_view_height_in_lines=0;	WORD base_line_delta=0;	WORD spare=0; 
    }

 

 
 
 
 

 

STRUCT IMAGE
	{
	WORD horiz_align= 0x01 ;
	WORD vert_align= 0x00 ;
	LTEXT bmpfile="";
    WORD bmpid;
    WORD bmpmask=0xffff;
	LLINK extension=0;
	}

 
 
 
 

 

STRUCT LABEL
    {
	WORD flags = 0;
	WORD horiz_align= 0x01 ;
	WORD vert_align= 0x00 ;
	WORD standard_font=EEikLabelFontNormal;
	WORD reserve_length=0;
    LTEXT txt;
    }

 
 
 
 

STRUCT LISTBOX
	{
	BYTE version=0;
	WORD flags = 0;
	WORD height = 5;		 
	WORD width = 10;		 
    LLINK array_id = 0;
	}

 

 
 
 
 

STRUCT HOTKEY
    {
    LONG command;
    LONG key;
    }

STRUCT HOTKEYS
    {
    STRUCT plain[];
    STRUCT control[];
    STRUCT shift_control[];
    }

STRUCT MENU_PANE
    {
    STRUCT items[];  
	LLINK extension=0;
    }

STRUCT MENU_ITEM
    {
    LONG command=0;
    LLINK cascade=0;
    LONG flags=0;
    LTEXT txt;
	LTEXT extratxt="";
	LTEXT bmpfile="";
    WORD bmpid=0xffff;
    WORD bmpmask=0xffff;
	LLINK extension=0;
    }

STRUCT MENU_BAR
    {
    STRUCT titles[];  
	LLINK extension=0;
    }

STRUCT MENU_TITLE
    {
    LLINK menu_pane;
    LTEXT txt;
    LONG flags=0;
	LTEXT bmpfile="";
    WORD bmpid=0xffff;
    WORD bmpmask=0xffff;
	LLINK extension=0;
    }

 

 
 
 
 

 

STRUCT MNBUT
    {
	LLINK popout=0;
	BYTE version=0;
	WORD behavior=0;
	WORD layout=0;  
	LTEXT helptxt="";
	LLINK extension=0;
    LTEXT txt="";
	LTEXT bmpfile="";
    WORD bmpid=0xffff;
    WORD bmpmask=0xffff;
    }

 
 
 
 

 
 

STRUCT NUMBER_INT8
	{
	BYTE value=0;
	}

STRUCT NUMBER_INT16
	{
	WORD value=0;
	}

STRUCT NUMBER_INT32
	{
	LONG value=0;
	}

 
 
 
 

 

STRUCT TOOLBAR
    {
	WORD length=0;
	WORD breadth= 70 ;
	BYTE lines=1;
    LONG flags=0;
    STRUCT controls[];
	LLINK extension=0;
    }

STRUCT TOOLBAND
    {
	WORD length=0;
	WORD breadth= 25 ;
	BYTE lines=1;
    LONG flags= 0x01 ;
    STRUCT controls[];
	LLINK extension=0;
    }

STRUCT TBAR_CTRL
	{
	WORD type;
	WORD id=0;
	WORD flags=0;
	WORD length=0;
	STRUCT control;
	}

STRUCT TBAR_BUTTON
	{
	WORD type=0;  
	WORD id=0;
	WORD flags=0;
	WORD length=0;
	BYTE version=0;
	WORD behavior=0;
	WORD layout=0;  
	LTEXT helptxt="";
	LLINK extension=0;
    LTEXT txt="";
	LTEXT bmpfile="";
    WORD bmpid=0xffff;
    WORD bmpmask=0xffff;
	}

STRUCT TBAR_PICBUT
	{			
	WORD type=EEikCtTwoPictureCommandButton;
	WORD id=0;
	WORD flags=0;
	WORD length=0;
	BYTE version=0;
	WORD behavior=0;
	WORD layout=0;  
	LTEXT helptxt="";
	LLINK extension=0;
    LTEXT txt="";
	LTEXT bmpfile="";
    WORD bmpid=0xffff;
    WORD bmpmask=0xffff;
    WORD bmpsecondid=0xffff;
    WORD bmpsecondmask=0xffff;
	}

 
 
 
 

 

STRUCT CMBUT
    {
	BYTE version=0;
	WORD behavior=0;
	WORD layout=0;  
	LTEXT helptxt="";
	LLINK extension=0;
	LTEXT txt="";
	LTEXT bmpfile="";
    WORD bmpid=0xffff;
    WORD bmpmask=0xffff;
    }

STRUCT PICMBUT
    {
	BYTE version=0;
	WORD behavior=0;
	WORD layout=0;	 
	LTEXT helptxt="";
	LLINK extension=0;
	LTEXT txt="";
	LTEXT bmpfile="";
    WORD bmpid=0xffff;
    WORD bmpmask=0xffff;
    WORD bmpsecondid=0xffff;
    WORD bmpsecondmask=0xffff;
    }

STRUCT TXTBUT
    {
	BYTE version=0;
	WORD behavior=0;
	WORD layout=0;  
	LTEXT helptxt="";
	LLINK extension=0;
    LTEXT txt1="";
    LTEXT txt2="";
    }

STRUCT BMPBUT
    {
	BYTE version=0;
	WORD behavior=0;
	WORD layout=0;  
	LTEXT helptxt="";
	LLINK extension=0;
	LTEXT bmp1file="";
    WORD bmp1id=0xffff;
    WORD bmp1mask;
	LTEXT bmp2file="";
    WORD bmp2id=0xffff;
    WORD bmp2mask;
    }

 
 
 
 

STRUCT COLOR
	{
	BYTE red;
	BYTE green;
	BYTE blue;
	}

STRUCT CTRL_COLOR
	{
	WORD logical_color;
	STRUCT color;  
	}

STRUCT COLORLIST
	{
	LLINK array_id=0;
	}

STRUCT EIKCOLORLIST
	{
	LLINK array_id=0;
	LLINK ext_id;
	}

 

 
 
 
 

 

STRUCT FONT
	{
	LONG fontid;  
	WORD flags=0;  
	}

STRUCT NAMED_FONT
	{
	LTEXT name;
	WORD height;	 
	WORD flags=0;  
	}

STRUCT AVKON_SYSTEM_FONT
	{
	LONG fontuid;  
	STRUCT named_font;  
	}

 
 
 
 

 

STRUCT LBBUT
    {
	WORD buttontype=0;  
	STRUCT button;
	LONG hotkey;
	BYTE flags=1;  
    }

 
 
 
 

STRUCT INT16
	{
	WORD value;
	}

 
 
 
 

 
 
 
 

STRUCT RSS_SIGNATURE
    {
    LONG signature= 4 ;
    SRLINK self;
    }

STRUCT TBUF1	{ BUF<1> buf; }
STRUCT TBUF2	{ BUF<2> buf; }
STRUCT TBUF4	{ BUF<4> buf; }
STRUCT TBUF8	{ BUF<8> buf; }
STRUCT TBUF9	{ BUF<9> buf; }
STRUCT TBUF16	{ BUF<16> buf; }
STRUCT TBUF32	{ BUF<32> buf; }
STRUCT TBUF40	{ BUF<40> buf; }
STRUCT TBUF64	{ BUF<64> buf; }
STRUCT TBUF80	{ BUF<80> buf; }
STRUCT TBUF128	{ BUF<128> buf; }
STRUCT TBUF256	{ BUF<256> buf; }

STRUCT CONTROLS
	{
	LEN BYTE STRUCT controls[];
	}

STRUCT EIK_APP_INFO
    {
    LLINK hotkeys=0;
    LLINK menubar=0;
    LLINK toolbar=0;
    LLINK toolband=0;
    LLINK cba=0;	
    LLINK status_pane=0;
    }

STRUCT PAGESIZE
	{
	LONG width=0;
	LONG height=0;
	}

STRUCT VIEW_ID
	{
	LONG appuid;
	LONG viewuid;
	}

 
 
 
 

 

STRUCT DLG_BUTTONS
    {
	LONG flags= 0x01 ;
    STRUCT buttons[];
    }

STRUCT DLG_BUTTON
    {
	WORD id=0;
	WORD buttontype=0;  
	STRUCT button;
	LONG hotkey;
	BYTE flags=1;
	BYTE line=1;
    }

 
 
 
 

STRUCT STATUS_PANE_SYSTEM_MODEL				 
	{
	STRUCT panes[];							 
	LLINK default_layout;					 
	LLINK layouts[];						 
	}

STRUCT SPANE_PANE
	{
	LONG id;
	WORD flags= 0 ;
	WORD type;
	LLINK resource=0;
	}

STRUCT STATUS_PANE_LAYOUT
	{
	WORD position;
	STRUCT pane_tree;						 
	}

STRUCT SPANE_LAYOUT_TREE_NODE
	{
	LONG id=0;
	WORD flags;
	WORD size;
	STRUCT sub_panes[];						 
	}

STRUCT STATUS_PANE_APP_MODEL				 
	{
	LLINK layout= 0 ;		 
	STRUCT panes[];							 
	}

 
 
 
 

STRUCT CBA
	{
	LONG flags= 0x01 ;
	WORD breadth=80;  
	LLINK related_buttons=0;
   	STRUCT buttons[];
	}

STRUCT CBA_BUTTON
	{
	BYTE version=0;
	WORD id=0;
   	LTEXT txt="";
	LTEXT bmpfile="";
  	WORD bmpid=0xffff;		 
    WORD bmpmask=0xffff;	 
	}


# 2 "/home/martin/symbian-sdks/gnupoc-s60_12/epoc32/include/eikon.rh" 2



 
 
 
 

 

STRUCT DIALOG
    {
    LONG flags=0;
    LTEXT title="";
	LLINK pages=0;
    LLINK buttons=0;
    STRUCT items[];
	LLINK form=0;
    }

STRUCT DLG_LINE
    {
    WORD type;
    LTEXT prompt;
    WORD id=0;
	LONG itemflags=0;
    STRUCT control;
	LTEXT trailer="";
	LTEXT bmpfile = "" ;    
	WORD bmpid = 0xffff ;  
	WORD bmpmask ;		 
	LTEXT tooltip = "" ;	 
    }

STRUCT DLG_LINE_INDIRECT
    {
    WORD type= -1 ;
	LLINK line;
    }

STRUCT PAGE
	{
	WORD id=0;
	LTEXT text;
	LTEXT bmpfile = "" ;    
	WORD bmpid = 0xffff ;  
	WORD bmpmask ;		 
	LLINK lines=0;
	LLINK form=0 ;	
	WORD flags=0 ;	
	}

STRUCT DIALOG_INDIRECT
    {
    LONG flags=0;
    LTEXT title;
	LLINK pages=0;
    LLINK buttons=0;
    WORD count= -1 ;
	LLINK main=0;
    }

STRUCT FORM
	{
	WORD flags=0 ;
	STRUCT items[] ;
	}

 
 
 
 

STRUCT DTLBOX
	{
	WORD flags=0;
	WORD modelflags=0;
	WORD height=5;	 
	WORD width=0;	 
	}

 
 
 
 

 

 
 
 
 
 
 
 

 
 
 
 

 
 
   
  
 
 

 

 
 
 
 

 
 
 
 
 
 

 
 
 
 

STRUCT IMAGE_ARRAY
	{
	WORD width=0;
	LLINK array_id=0;
	}

 
 
 
 

 

 
 
 

STRUCT CALENDAR
	{
	WORD flags=0;  
	BYTE nummonths;
	BYTE nummonthsperrowofmonths;
	WORD verticalspaceaboveyear;
	WORD verticalspacebetweenyearandtoprowofmonths;
	WORD verticalspacebetweeneachrowofmonths;
	WORD verticalspacebeneathbottomrowofmonths;
	WORD horizontalspaceoneachsideofmonthmatrix;
	WORD horizontalspacebetweeneachcolumnofmonths;
	WORD verticalspacebetweenmonthnameanddaynameinitials;
	WORD verticalspacebetweendaynameinitialsandtoprowofdays;
	WORD verticalspacebetweeneachrowofdays;
	WORD horizontalspacebetweeneachcolumnofdays;
	STRUCT yearfont;  
	STRUCT monthfont;
	STRUCT weekdayinitialfont;
	STRUCT numeralfont;
	LTEXT textseparatingyearrange;
	}


 
 
 
 

 

 
 
 

STRUCT POINT
	{
	WORD x;
	WORD y;
	}
 














STRUCT CLOCK_PEN_SOLID
	{
	BYTE donotchange=1;
	BYTE color;  
	BYTE size;
	}
 






























































STRUCT ANALOG_CLOCK_HAND_FEATURE_LINE
	{
	STRUCT pen;  
	STRUCT startpoint;  
	STRUCT endpoint;  
	}
 





















































 
 
 
 

STRUCT COMBOBOX
	{
    WORD width;  
	WORD maxlength;
	WORD maxarraysize;
	}

 
 
 
 

STRUCT FLPTED
	{
	WORD maxlength=18;
	DOUBLE min=-9.9e99;
	DOUBLE max=9.9e99;
	DOUBLE default=0;  
	}

STRUCT FIXPTED
	{
	WORD decimalplaces=2; 
	LONG min;
	LONG max;
	LONG default=0;  
	}

STRUCT TWIPSED
	{
	LONG min=0; 
	LONG max;
	}

 
 
 
 

STRUCT GRAYSEL
	{
    WORD flags=0;
	}

 

 
 
 
 

STRUCT HOROPBUT
	{
	WORD buttonSpacing=12;
	WORD textOnRight=0;
	LLINK array_id=0;
	}

STRUCT OPBUT
	{
    WORD id=0;
    LTEXT text;
	}

 
 
 
 

 

 
 
 

STRUCT TIME
	{
	BYTE second=0;
	BYTE minute=0;
	BYTE hour=0;
	}

STRUCT DATE
	{
	BYTE day=0;  
	BYTE month=0;  
	WORD year;
	}

STRUCT TIME_AND_DATE
	{
	BYTE second=0;
	BYTE minute=0;
	BYTE hour=0;
	BYTE day=0;  
	BYTE month=0;  
	WORD year;
	}

STRUCT DURATION
	{
	LONG seconds=0;  
	}

STRUCT TIME_OFFSET
	{
	LONG seconds=0;
	}

STRUCT LATITUDE_AND_LONGITUDE
	{
	LTEXT degreesign;
	LTEXT minutesign;
	LTEXT secondsign;
	LTEXT north;
	WORD keytomatchfornorth;
	LTEXT south;
	WORD keytomatchforsouth;
	LTEXT east;
	WORD keytomatchforeast;
	LTEXT west;
	WORD keytomatchforwest;
	}

STRUCT MFNE_SYMBOLIC_ITEM
	{
	LONG id;
	WORD keytomatch;
	LTEXT text;
	}

STRUCT CELL
	{
	WORD row=0;
	WORD col=0;
	}

 
 
 

STRUCT MFNE_SEPARATOR
	{
	LTEXT text;
	}

STRUCT MFNE_NUMBER
	{
	LONG min;
	LONG max;
	BYTE flags=0;
	}

STRUCT MFNE_SYMBOL
	{
	LEN BYTE STRUCT symbolicitems[];  
	}

 
 
 

STRUCT NUMBER_EDITOR
	{
	LONG min;
	LONG max;
	}

STRUCT RANGE_EDITOR
	{
	LONG min;
	LONG max;
	LTEXT separatortext="-";
	}

STRUCT CELL_RANGE_EDITOR
	{
	STRUCT minCell;  
	STRUCT maxCell;  
	LTEXT separatortext=":";
	}

STRUCT TIME_EDITOR
	{
	STRUCT minTime;  
	STRUCT maxTime;  
	BYTE flags=0;  
	}

STRUCT DATE_EDITOR
	{
	STRUCT minDate;  
	STRUCT maxDate;  
	BYTE flags=0;  
	}

STRUCT TIME_AND_DATE_EDITOR
	{
	STRUCT minTimeAndDate;  
	STRUCT maxTimeAndDate;  
	BYTE flags=0;  
	LTEXT interveningtext=" ";
	}

STRUCT DURATION_EDITOR
	{
	STRUCT minDuration;  
	STRUCT maxDuration;  
	BYTE flags=0;  
	}

STRUCT TIME_OFFSET_EDITOR
	{
	STRUCT minTimeOffset;  
	STRUCT maxTimeOffset;  
	BYTE flags=0;  
	}

STRUCT LATITUDE_EDITOR
	{
	LONG flags=0;
	LLINK latlongresourceid;  
	}

STRUCT LONGITUDE_EDITOR
	{
	LONG flags=0;
	LLINK latlongresourceid;  
	}

 
 
 
 

STRUCT PROGRESSINFO
 	{
    WORD text_type=0;
	WORD splits_in_block=0;
	LONG finalval;
	LONG width=120;
	LONG height=10;
	}

 

 
 
 
 

 
 
# 1 "/home/martin/symbian-sdks/gnupoc-s60_12/epoc32/include/gulftflg.hrh" 1
 
 
 
 



















# 587 "/home/martin/symbian-sdks/gnupoc-s60_12/epoc32/include/eikon.rh" 2


STRUCT RTXTED
    {
	WORD width=0;
	WORD height=0;
	WORD numlines=1;
	WORD textlimit=0;
	LONG flags=0;
	WORD fontcontrolflags=1;
	WORD fontnameflags= 0x10 ;
	WORD default_case= 0x4 ;	WORD allowed_case_modes= 0x1  | 0x2  | 0x4  ;	WORD numeric_keymap=EAknEditorStandardNumberModeKeymap;	WORD allowed_input_modes= 0x1  | 0x2  | 0x4  ;	WORD default_input_mode= 0x1 ;	LLINK special_character_table=-1;	WORD avkon_flags= 0x000 ;	WORD max_view_height_in_lines=0;	WORD base_line_delta=0;	WORD spare=0; 
    }

 
 
 
 

STRUCT SECRETED
	{
 	WORD num_letters=8;
	}

 
 
 
 

 

STRUCT SPACER
    {
	WORD width=0;
	WORD height=0;
	LONG color=0;  
    }

 
 
 
 

STRUCT WORLD_SELECTOR
	{
	WORD flags=0;
	WORD chars_wide=0;
	LTEXT countrysearch="";
	LTEXT worldsearch="";
	}

 
 
 
 
 

 

STRUCT DLG_TOOLBAR
    {
	WORD width=0;
    STRUCT controls[];
    }

STRUCT DLG_TBAR_BUTTON
	{
	WORD type=1;  
	WORD id=0;
	WORD flags=0;
	WORD length=0;
	WORD buttontype=0;  
	STRUCT button;
	LONG hotkey;
	BYTE hotkeyflags=1;  
	}

STRUCT DLG_TBAR_SPACER
	{
	WORD type=EEikCtSpacer;
	WORD id=0;
	WORD flags=0;
	WORD length=0;
	WORD width=0;
	WORD height=0;
	LONG color=0;  
	}

STRUCT DLG_TBAR_CTRL
	{
	WORD type;
	WORD id=0;
	WORD flags=0;
	WORD length=0;
	STRUCT control;
	}
 
 
 
 

STRUCT PRTPREV
    {
    WORD width;
    WORD height;
    }

 
 
 
 

STRUCT FILENAMESELECTOR
	{
	WORD maxdisplaychar=15;
	}

STRUCT FILENAMEEDITOR
	{
    WORD width = 15;
	}

STRUCT FOLDERNAMESELECTOR
	{
	WORD maxdisplaychar=15;
	}

STRUCT FOLDERNAMEEDITOR
	{
    WORD width = 15;
	}

STRUCT DRIVENAMESELECTOR
	{
	}

 
 
 
 

STRUCT GTXTED
    {
	WORD width=0;
	WORD height=0;
	WORD numlines=1;
	WORD textlimit=0;
	LONG flags=0;
	WORD fontcontrolflags=1;
	WORD fontnameflags= 0x10 ;
	WORD default_case= 0x4 ;	WORD allowed_case_modes= 0x1  | 0x2  | 0x4  ;	WORD numeric_keymap=EAknEditorStandardNumberModeKeymap;	WORD allowed_input_modes= 0x1  | 0x2  | 0x4  ;	WORD default_input_mode= 0x1 ;	LLINK special_character_table=-1;	WORD avkon_flags= 0x000 ;	WORD max_view_height_in_lines=0;	WORD base_line_delta=0;	WORD spare=0; 
    }

 
 
 
 


STRUCT UNIFIEDNAMESELECTOR
	{
	WORD maxdisplaychar=15;
	}

 
 
 

STRUCT IP_FIELD_EDITOR
	{
	STRUCT min_field_values;
	STRUCT max_field_values;
	BYTE flags;		
	}

STRUCT IP_FIELD
	{
	BYTE first_field;
	BYTE second_field;
	BYTE third_field;
	BYTE fourth_field;
	}
# 14 "" 2

# 1 "/home/martin/symbian-sdks/gnupoc-s60_12/epoc32/include/eikon.rsg" 1
 























# 1 "/home/martin/symbian-sdks/gnupoc-s60_12/epoc32/include/eikcore.rsg" 1
















# 25 "/home/martin/symbian-sdks/gnupoc-s60_12/epoc32/include/eikon.rsg" 2

# 1 "/home/martin/symbian-sdks/gnupoc-s60_12/epoc32/include/eikcoctl.rsg" 1





















































# 26 "/home/martin/symbian-sdks/gnupoc-s60_12/epoc32/include/eikon.rsg" 2

# 1 "/home/martin/symbian-sdks/gnupoc-s60_12/epoc32/include/eikctl.rsg" 1


































# 27 "/home/martin/symbian-sdks/gnupoc-s60_12/epoc32/include/eikon.rsg" 2

# 1 "/home/martin/symbian-sdks/gnupoc-s60_12/epoc32/include/eikcdlg.rsg" 1





















# 28 "/home/martin/symbian-sdks/gnupoc-s60_12/epoc32/include/eikon.rsg" 2



# 15 "" 2

# 1 "/home/martin/symbian-sdks/gnupoc-s60_12/epoc32/include/avkon.rh" 1
 




















# 1 "/home/martin/symbian-sdks/gnupoc-s60_12/epoc32/include/avkon.hrh" 1
 















 
 
 
 
 
 
 
 

 






 


 



 





 


 
 
 
 
 
 















 
 
 


 
 
 








 









 





 
 
 










 
 
 






 
 
 
 
 
 
 

 
 
 

enum
    {
	EAknApplicationIconWidth = 42,
	EAknApplicationIconHeight = 29
    };

 
 
 
 
 


 
 
 

 





 
 
 




 
enum 
	{
	EAknDummyForProcessCommands=4000,
	EAknMarkAll,  
	EAknUnmarkAll,  
	EAknCmdHelp,
	EAknCmdAddToPinboard,
	EAknCmdFindPopupActivated,
	EAknCmdEditModeT9,
	EAknCmdEditModeMultitap,
	EAknCmdEditModeNumber,
	EAknCmdEditInsertNumber,
	EAknCmdEditInsertSymbol,
	EAknCmdInputLanguage,
	EAknCmdPredictiveTextCascade,
	EAknCmdT9PredictiveMatches,
	EAknCmdT9PredictiveInsertWord,
	EAknCmdT9PredictiveEditWord,
	EAknCmdT9PredictiveT9Off,
	EAknCmdMultitapPredictiveT9On,
	EAknCmdExit,
	EAknCmdEditTextMenu,
	EAknCmdEditListMenu,  
	EAknCmdMark,  
	EAknCmdUnmark,  
	EAknCmdOpen,     

	 
	EChinFepCmdInstructions,
	EChinFepCmdModePinyin,
	EChinFepCmdModeZhuyin,
	EChinFepCmdModeStroke,
	EChinFepCmdModeLatinUpper,
	EChinFepCmdModeLatinLower,
	EChinFepCmdModeNumber,
	EChinFepCmdModeZhuyinFind,
	EChinFepCmdModeStrokeFind
};

 




enum		 
	{
	EAknSoftkeyOk = -2 ,
	EAknSoftkeyCancel = -1 ,
   	EAknSoftkeySelect = -6 ,
	EAknSoftkeyOptions= 3000,
	EAknSoftkeyBack,
	EAknSoftkeyMark,
	EAknSoftkeyUnmark,
	EAknSoftkeyInsert,
	EAknSoftkeyYes,
	EAknSoftkeyNo,
	EAknSoftkeyDone,
	EAknSoftkeyClose,
	EAknSoftkeyExit,
	EAknSoftkeyClear,
	EAknSoftkeyUnlock,
	EAknSoftkeySave,
	EAknSoftkeyShow,
	EAknSoftkeyListen,
	EAknSoftkeyRead,
	EAknSoftkeySearch,
	EAknSoftkeyEmpty,
	EAknSoftkeyLock,
    EAknSoftkeyCall,
    EAknSoftkeyAgain,
    EAknSoftkeyQuit,
    EAknSoftkeyDetails
	};

enum	{
	EAknSoftkeyDummyUsedWithShortcuts = 3200
	};

enum
	{
	EAknCBAFlagRespondWhenInvisible	= 0x02    
	};


 
 
 
 
 






 
 
 


 
 
 
 

 
 
 



enum
	{
	EAknCtTest = 5699 ,
	EAknControlIdBase = 5700,

    EAknCtFormattedListBox,  

     
    EAknCtSingleListBox,
    EAknCtSingleNumberListBox,
    EAknCtSingleHeadingListBox,
    EAknCtSingleGraphicListBox,
    EAknCtSingleGraphicHeadingListBox,
    EAknCtSingleNumberHeadingListBox,
    EAknCtSingleLargeListBox,
    EAknCtDoubleListBox,
    EAknCtDoubleNumberListBox,    
    EAknCtDoubleTimeListBox,
    EAknCtDoubleLargeListBox,   
    EAknCtDoubleGraphicListBox,
    EAknCtSettingListBox,      
    EAknCtSettingNumberListBox,   

     
    EAknCtSinglePopupMenuListBox,
    EAknCtSingleGraphicPopupMenuListBox,
    EAknCtSingleGraphicHeadingPopupMenuListBox,
    EAknCtMenuDoublePopupMenuListBox,
    EAknCtSinglePopupSubmenuListBox,
    EAknCtDoubleLargeGraphicPopupMenuListBox,
    EAknCtSingleHeadingPopupMenuListBox,

     
    EAknSetListBox,

     
    EAknFormGraphicListBox,

 
    EAknCtAppGrid,
    EAknCtPinbGrid,       
    EAknCtQdialGrid,      
    EAknCtCaleMonthGrid,  


    EAknCtTitlePane,
    EAknCtContextPane,
    EAknCtNaviPane,
    EAknCtSignalPane,
    EAknCtBatteryPane,
	EAknCtIndicatorPane,
    EAknCtIdleContextPane,
 
 
 
    EAknCtNote,
    EAknCtQuery,
	EAknCtMultilineQuery,
 
 
 
	EAknCtPopupField,
	EAknCtPopupFieldText,
 
	EAknCtFormLabelEditor,

 
	EAknCtLAF,
	EAknCtPopupHeadingPane,
	EAknCtSearchField,

 
	EAknCtSettingPage,

 
	EAknCtVolumeControl,
	EAknCtSlider,
	EAknCtListQueryControl,
   	EAknCtSpecialCharacterMap,

 
	EAknPhoneNumberEditor,

 
	EAknCtNumericSecretEditor,

 
	EAknCtPopupSettingList,
 
    EAknCtMessageQuery,

 
	EAknCtIntegerEdwin,
	EAknCtFloatingPointEdwin,
	EAknCtSelectionListFixedFind,
	EAknCtSelectionListPopupFind,
	EAknCtEmptyList,
 
	EAknCtLastControlId = 0x2000  

 
 
 
 
 
 
 
 
 
 
    };

 
enum
    {
    ENaviDecoratorControlNone,
    ENaviDecoratorControlTabGroup,
    ENaviDecoratorLabel,
    ENaviDecoratorImage,
    ENaviDecoratorToolTip  
    };

 


enum
	{
	EAknTabWidthWithTwoTabs = 36,
	EAknTabWidthWithTwoLongTabs = 74,
	EAknTabWidthWithThreeTabs = 22,
	EAknTabWidthWithThreeLongTabs = 67,
	EAknTabWidthWithFourTabs = 18,
	EAknTabWidthWithOneTab = 107
	};

 
enum 
    {
    EGeneralLayout = 1,
    EConfirmationLayout,
    EProgressLayout,
    ENoteWithImageLayout,
    ETextualNotificationLayout,
    ENotificationWithGraphicsLayout,
	EAknNoteControlAnimationCreationFailed,
	EWaitLayout
    };

enum 
    {
	EAknInvalidBorderCount = 1,
	EAknInvalidDimensionArrayOutOfBounds,
	EAknNoNoteControlDimensionDefined,
	EAknNoteControlNullArgumentUsed
    };

enum EAknNoteItemType {
	EAknNoteNoType = 1,
    EAknNoteBitmap,
    EAknNoteNumberTypeIndication,
    EAknNoteProgressBar,
    EAknNoteLabel,
    EAknNoteAnimation
};

enum TNoteCtrlIds
	{
	EGeneralNote = 1
	};


 



 

 
 
 
 
 
 
enum 
    {
    EDataLayout=1,
    EConfirmationQueryLayout,
    ECodeLayout,
    ETimeLayout,
    EDateLayout,
    EListLayout,
    EMultiListLayout,
	EMultiLineDataLayout,
	EDurationLayout,
	ETextSoftNotification,
	ENumberLayout,
	EPinLayout,
	EPhoneLayout,
    EMessageQueryLayout,
    EStaticSizeDataLayout,
    EFloatingPointLayout
    };

enum
	{
	ETextEditor=1,
	ESecretEditor,
	ETimeEditor,
	EDateEditor,
	ENumberEditor,
	EDurationEditor
	};

enum EAknMultilineDataLayout
{
	EMultiDataFirstEdwin = 1,
	EMultiDataSecondEdwin,
	EMultiDataFirstSecEd,
	EMultiDataSecondSecEd,
	EMultiDataFirstTimeEd,
	EMultiDataSecondTimeEd,
	EMultiDataFirstDateEd,
	EMultiDataSecondDateEd,
	EMultiDataFirstDurEd,
	EMultiDataSecondDurEd,
	EMultiDataFirstPhoneEd,
	EMultiDataSecondPhoneEd,
	EMultiDataFirstNumEd,
	EMultiDataSecondNumEd,
	EMultiDataFirstPinEd,
	EMultiDataSecondPinEd
	};

enum TQueryCtrlIds
	{
	EGeneralQuery = 0x500,
	EMultilineFirstLine,
	EMultilineSecondLine
	};

enum TListQueryCtrlIds
	{
	EListQueryMainInboxList = 1,
	EListQueryMainDraftList,
	EListQueryMainOutboxList,
	EListQueryAppViewLabel,
	EListQueryMsgEditField,
	EListQueryHeading,
	EListQueryControl
	};
   
enum TSelectionListCtrlIds
    {
    ESelectionListControl = 1,
    EFindControl,
    EAknEmptyListControl
    
    };
   

 
enum
	{
	ELayoutNoCmd =1,
	ELayoutOptional,  
	ELayoutRightSeparator,  
	ELayoutTransparentCell,   
	ELayoutItemMark,          

	ELayoutNotFilled,
	ELayoutNotAlwaysDrawn
	};

enum {
	ELayoutAlignNone,
	ELayoutAlignCenter,
	ELayoutAlignLeft,
	ELayoutAlignRight
     };

 
enum 
	{
	EAknEditorAlignNone,
	EAknEditorAlignCenter,
	EAknEditorAlignLeft,
	EAknEditorAlignRight
     };

 
enum 
	{
 	EAknEditorCharactersUpperCase = 0x1 ,
	EAknEditorCharactersLowerCase = 0x2 ,
	EAknEditorCharactersTextCase = 0x4 
	};

enum {
	EFontNone = 0,
	ELatinPlain12,
	ELatinBold12,
	ELatinBold13,
	ELatinBold17,
	ELatinBold19,
	ENumberPlain5,
	EClockBold30,
	ELatinClock14,
	EFontCustom,
	EPlain12,
	EPlain16, 
	EApacPlain12 = EPlain12,
	EApacPlain16 = EPlain16,
	EBold18,
	EBold24
	};



 
enum
{
	EAknLayoutFindPaneIconId = 1,
	EAknLayoutFindPaneEditorId,
	EAknLayoutMainPaneListGenPane,
	EAknLayoutMainPaneListGenPaneWithFindBox,
	EAknLayoutMainPaneFindPane,

	EAknListSinglePane,
	EAknListSingleNumberPane,
	EAknListSingleHeadingPane,
	EAknListSingleGraphicPane,
	EAknListSingleGraphicHeadingPane,
	EAknListSingleNumberHeadingPane,
	EAknListSingleLargeGraphicPane,
	EAknListDoubleNumberPane,
	EAknListDoubleTimePane,
	EAknListDoubleLargeGraphicPane,
	EAknListDoubleGraphicPane,
	EAknListSettingNumberPane,


	EAknLayoutFindPaneVShadow,
	EAknLayoutFindPaneHShadow,
	EAknLayoutFindPaneOutlineRect,


	EAknLayoutEmptyList1stLine,
	EAknLayoutEmptyList2ndLine

};


 










 





enum
	{
	EAknDialogQueryValueTextEditor1 = 1,
	EAknDialogQueryValueNumberEditor1,
	EAknDialogQueryValuePhoneEditor1,
	EAknDialogQueryValueTimeEditor1,
	EAknDialogQueryValueDateEditor1,
	EAknDialogQueryValueDurationEditor1,
	EAknFormQueryControl,
	EAknPopupFieldEmptyListNote
	};

 
enum
	{
	EAknPopupSettingListFlagAllowsUserDefinedEntry = 0x001,
	EAknPopupSettingListFlagInitialised = 0x002
	};

 
enum
	{
	EAknFormCmdEdit = 950,
	EAknFormCmdAdd,
	EAknFormCmdSave,
	EAknFormCmdLabel,
	EAknFormCmdDelete,
	EAknFormMaxDefault
	};

 
enum
	{
	EAknFormSliderLayout1 =1,
	EAknFormSliderLayout2,
	EAknFormSliderLayout3,
	EAknSettingsItemSliderLayout, 
	EAknSettingsItemSliderLayoutWithGraphics
	};

 
enum
	{
	EAknSliderValueNone,
	EAknSliderValueBareFigure,
	EAknSliderValuePercentage,
	EAknSliderValueFraction,
	EAknSliderValueDecimal
	};

 
enum
	{
	ESettingsVolumeControl,
	ENaviPaneVolumeControl
	};

 
enum
	{
	 
	EAknIndicatorIrActive,
	EAknIndicatorEnvelope,
    EAknIndicatorEmailMessage,
    EAknIndicatorDataMessage,
    EAknIndicatorFaxMessage,
    EAknIndicatorOtherMessage,
    EAknIndicatorSecuredConnection,
	EAknIndicatorVoiceMailWaiting,
	EAknIndicatorVoiceMailWaitingOnLine1,
	EAknIndicatorVoiceMailWaitingOnLine2,  
	EAknIndicatorVoiceMailWaitingOnBothLines,  
	EAknIndicatorHomeZone,
	EAknIndicatorBluetooth,
	EAknIndicatorBluetoothModuleOn,
	EAknIndicatorOutbox,
	EAknIndicatorKeyguard,
	EAknIndicatorAllCallsForwarded,
	EAknIndicatorCallsForwardedOnLine1,
	EAknIndicatorCallsForwardedOnLine2, 
	EAknIndicatorCallsForwardedOnBothLines,
	EAknIndicatorCallsForwardedToVoiceMailbox,
	EAknIndicatorSelectedLine,
	EAknIndicatorAlarmClock,     
    EAknIndicatorHeadset,
    EAknIndicatorLoopset,
    EAknIndicatorIHFActive,
    EAknIndicatorInstantMessage,
    EAknIndicatorTTY,

	 
	EAknNaviPaneEditorIndicatorT9 = 100,
	EAknNaviPaneEditorIndicatorUpperCase,
	EAknNaviPaneEditorIndicatorLowerCase,
	EAknNaviPaneEditorIndicatorTextCase,
	EAknNaviPaneEditorIndicatorNumberCase,
	EAknNaviPaneEditorIndicatorQuery,

     
	EAknNaviPaneEditorIndicatorPinyin = 150,
    EAknNaviPaneEditorIndicatorZhuyin,
	EAknNaviPaneEditorIndicatorStroke,  

	EAknNaviPaneEditorIndicatorZhuyinFind,
	EAknNaviPaneEditorIndicatorStrokeFind,

        EAknNaviPaneEditorIndicatorStrokeTrad,   

	 
    EAknNaviPaneEditorIndicatorAudioAttached = 200,
    EAknNaviPaneEditorIndicatorImageAttached,
    EAknNaviPaneEditorIndicatorObjects,
    EAknNaviPaneEditorIndicatorAttachment,
	EAknNaviPaneEditorIndicatorMessageLength,
	EAknNaviPaneEditorIndicatorMessageInfo
	};


enum   
	{
	EAknIndicatorStateOff,
	EAknIndicatorStateOn,
	EAknIndicatorStateAnimate
	};

enum  
    {
    EAknSignalGprsIndicatorOff = 0,
    EAknSignalGprsIndicatorAvailable,   
    EAknSignalGprsIndicatorAttached,
    EAknSignalGprsIndicatorEstablishingContext,
    EAknSignalGprsIndicatorContext,
    EAknSignalGprsIndicatorSuspended
    };

 














 





 

	

 



 
 
 
 
 
 
 
 
 







 
enum   
    {
	EAknSCTLowerCase,
	EAknSCTUpperCase,
	EAknSCTNumeric,
	EAknSCTChiChineseInputModes = EAknSCTUpperCase,
	EAknSCTChiLatinInputModes = EAknSCTLowerCase
	};

 


 




enum TSCTQueryCtrlIds
    {
    EAknSCTQueryHeadingId = 1,
    EAknSCTQueryContentId
    };

 

enum TAvkonSKeyRepeatType
	{
	ESKeyTypeShort,
	ESKeyTypeLong,
	ESKeyTypeRepeat
	};

 
 
 
enum TAvkonSystemSID
	{
	EAvkonSIDNoSound = 1000,
	EAvkonSIDDefaultSound = 1001,
	EAvkonSIDStandardKeyClick = 1002,
	EAvkonSIDConfirmationTone = 1003,
	EAvkonSIDInformationTone = 1003,	
	EAvkonSIDWarningTone = 1004,
	EAvkonSIDErrorTone = 1005,
	EAvkonSIDVolumeMaxTone = 1006,
	EAvkonSIDVolumeMinTone = 1007,
	EAvkonSIDReadialCompleteTone = 1008,
	EAvkonSIDBatteryLowTone = 1009,	
	EAvkonSIDChargingBatteryTone  = 1010,
	EAvkonSIDConnectionStartTone  = 1011,
	EAvkonSIDConnectionStopTone  = 1012,
	EAvkonSIDOperationReadyTone  = 1013,
	EAvkonSIDNameDiallerStartTone  = 1014,
	EAvkonSIDNameDiallerErrorTone  = 1015,
	EAvkonSIDNameDiallerAbortTone  = 1016,
	EAvkonSIDPowerOffTone  = 1017,
	EAvkonSIDPowerOnTone  = 1018,
	EAvkonSIDRechargeBatteryTone = 1019,
	EAvkonSIDVoiceRecordingTone  = 1020,
	EAvkonSIDVoiceRecordingStartTone  = 1021,
	EAvkonSIDVoiceRecordingStopTone  = 1022,
	EAvkonSIDWrongCharger  = 1023,
	EAvkonSIDNetBusy = 1024,				
	EAvkonSIDNetCallWaiting = 1025,		
	EAvkonSIDNetReorder = 1026,	
	EAvkonSIDNetCongestion = 1027,		
	EAvkonSIDNetSpecialInformation = 1028,	
	EAvkonSIDNetRadioNotAvailable = 1029,
	EAvkonSIDIHFActive = 1030,
	EAvkonSIDRadioPathAcknowledge = 1031,
	EAvkonSIDDial = 1032,
	EAvkonSIDRingGoing = 1033
	};

 
enum TAvkonSoundsPriority
	{
	EAvkonKeyClickPriority = 45,  
	EAvkonPoweringTonesPriority = 50,
	EAvkonLowLevelNotesPriority = 55,
	EAvkonConfirmationNotePriority = 55,
	EAvkonVolumeSettingTonesPriority = 60,
	EAvkonConnectionTonesPriority = 65,
	EAvkonHighLevelNotesPriority = 70,
	EAvkonErrorNotePriority = 70,
	EAvkonWarningNotePriority = 70,
	EAvkonVoiceDiallingTonesPriority = 73,
	EAvkonNetworkingTonesPriority = 75,
	EAvkonRecordingTonesPriority = 80,
	EAvkonChargingTonesPriority = 85,
	EAvkonNewMessageTonesPriority = 90,
	EAvkonAlarmTonesPriority = 95,	
	EAvkonRingingTonesPriority = 100
	};

 
enum TAvkonSoundsPreference
	{
	EAknAudioPrefIncomingCall		=0x01340001,
	EAknAudioPrefIncomingCallLine2	=0x01330001,
	EAknAudioPrefIncomingDataCall		=0x01320001,
	EAknAudioPrefAutoRedialCompleted	=0x01310001,

	EAknAudioPrefAlarmClock			=0x01220001,
	EAknAudioPrefCalendarAlarm		=0x01210001,

 
	EAknAudioPrefNewSMS			=0x01120001,
	EAknAudioPrefNewSpecialMessage	=0x01110001,

 
	EAknAudioPrefBatteryLow			=0x01030001,
	EAknAudioPrefRechargeBattery		=0x01020001,
	EAknAudioPrefWrongCharger		=0x01010001,

 
	EAknAudioPrefVoiceRecStart		=0x00930001,
	EAknAudioPrefVoiceRecRecording	=0x00920001,
	EAknAudioPrefVoiceRecStop		=0x00910001,

 
	EAknAudioPrefRadioPathAck		=0x00890001,
	EAknAudioPrefDial				=0x00880001,
	EAknAudioPrefRingGoing			=0x00870001,					
	EAknAudioPrefBusy				=0x00860001,
	EAknAudioPrefCallWaiting		=0x00850001,
	EAknAudioPrefReorder			=0x00840001,
	EAknAudioPrefCongestion			=0x00830001,
	EAknAudioPrefSpecialInformation	=0x00820001,
	EAknAudioPrefRadioNotAvailable	=0x00810001,

 
	EAknAudioPrefError		=0x00720001,
	EAknAudioPrefWarning		=0x00710001,

 
	EAknAudioPrefVoiceStarting	=0x00630001,
	EAknAudioPrefVoiceError		=0x00620001,
	EAknAudioPrefVoiceAbort		=0x00610001,

 
	EAknAudioPrefConnectionStart	=0x00530001,
	EAknAudioPrefConnectionStop	=0x00520001,
	EAknAudioPrefOperationReady	=0x00510001,

 
	EAknAudioPrefFilePreview	=0x00440001,
	EAknAudioPrefAudioVolumeMin	=0x00430001,
	EAknAudioPrefAudioVolumeMax	=0x00420001,
	EAknAudioPrefIHFActive		=0x00410001,

 
	EAknAudioPrefCharging		=0x00330001,
	EAknAudioPrefConfirmation	=0x00320001,
	EAknAudioPrefDefaultTone	=0x00310001,

 
	EAknAudioPrefPowerOn		=0x00220001,
	EAknAudioPrefPowerOff		=0x00210001,

 
	EAknAudioPrefKeyPressNonDTMF	=0x00140001,
	EAknAudioPrefKeyDownDTMF	=0x00130001,
	EAknAudioPrefKeyUpDTMF		=0x00120001,
	EAknAudioPrefCamera		=0x00110001,

 
	EAknAudioPrefVoiceRec		=0x00060001,
	EAknAudioPrefComposer		=0x00050001,
	EAknAudioPrefRingFilePreview	=0x00040001,
	EAknAudioPrefVocosPlayback	=0x00030001,
	EAknAudioPrefVocosTrain		=0x00020001,
	EAknAudioPrefVocosRecog		=0x00010001,
	
	EAvkonKeyClickPreference = 0x00140001,
	EAvkonConfirmationNotePreference = 0x00320001,
	EAvkonErrorNotePreference = 0x00720001,
	EAvkonWarningNotePreference = 0x00710001
	};

 


enum TMessageQueryCtrlIds
    {
    EAknMessageQueryHeaderId = 1,
    EAknMessageQueryContentId
    };

 
     










enum TAvkonIncallStatusBubbleFlags 
    {
    EAknStatusBubbleAlerting     = 0x00,  
    EAknStatusBubbleActive       = 0x01,  
    EAknStatusBubbleOnHold       = 0x02,  
    EAknStatusBubbleDisconnected = 0x03,  
    EAknStatusBubbleNoCiphering  = 0x04,		
    EAknStatusBubbleMuted        = 0x08,
    EAknStatusBubbleVisible      = 0x10,
    EAknStatusBubbleFax      = 0x20,
    EAknStatusBubbleData      = 0x40,
    EAknStatusBubbleDataHscsd      = 0x80,
    EAknStatusBubbleLine2      = 0x100
    };


 



enum TAknNoteDialogTimeout
    {
    EAknNoteDialogUndefinedTimeout = 0,
    EAknNoteDialogShortTimeout = 1500000,
    EAknNoteDialogLongTimeout = 3000000,
    
     
    EAknConfirmationNoteTimeout = EAknNoteDialogShortTimeout,
    EAknInformationNoteTimeout = EAknNoteDialogLongTimeout,
    EAknErrorNoteTimeout = EAknNoteDialogLongTimeout,
    EAknWarningNoteTimeout = EAknNoteDialogLongTimeout
    };

 



enum TAknNoteDialogTone 
    {
    EAknNoteDialogNoTone = 0,
    EAknNoteDialogConfirmationTone = EAvkonSIDConfirmationTone,
    EAknNoteDialogWarningTone = EAvkonSIDWarningTone,
    EAknNoteDialogErrorTone  = EAvkonSIDErrorTone
    };


enum TAknSelectionListDialogFlags
    {
    EAknFlagFind = 0x0001
    };

enum TAknIconArrayType
    {
    EAknIconArrayNone,
    EAknIconArraySimple,
    EAknIconArrayComplex
    };
 
 
enum EVariantFlag
   {
   EEuropeanVariant=0,
   EApacVariant
   };


 
 
 
 
 
enum ESubVariantFlag
   {
   ENoSubVariant = 0,
   EPrcSubVariant,
   EHongKongSubVariant,
   ETaiwanSubVariant
   };


 


 



 
 






enum TAknKeyBlockMode
	{
	EDefaultBlockMode=0,
	ENoKeyBlock
	};




# 22 "/home/martin/symbian-sdks/gnupoc-s60_12/epoc32/include/avkon.rh" 2




STRUCT NAVI_DECORATOR
	{
	WORD type=ENaviDecoratorControlNone;
	STRUCT control;
	}

STRUCT TITLE_PANE
	{
	LTEXT txt="";
	LTEXT bmpfile="";
	WORD bmpid=0xffff;
	WORD bmpmask=0xffff;
	}

STRUCT CONTEXT_PANE
	{
	LTEXT bmpfile="";
	WORD bmpid=0xffff;
	WORD bmpmask=0xffff;
	}

STRUCT TAB_GROUP
	{
	WORD tab_width = EAknTabWidthWithTwoTabs;   
	WORD active = 0;  
	STRUCT tabs[];
	}

STRUCT TAB
	{
	WORD id=0;
	LTEXT txt="";
	LTEXT bmpfile="";
	WORD bmpid=0xffff;
	WORD bmpmask=0xffff;
	}

STRUCT NAVI_LABEL
	{
	LTEXT txt="";
	}

STRUCT NAVI_IMAGE
	{
   	LTEXT bmpfile="";
	WORD bmpid=0xffff;
	WORD bmpmask=0xffff;
	}

STRUCT SIGNAL_PANE
	{
	WORD level = 0;
	}

STRUCT BATTERY_PANE
	{
	WORD level = 0;
	}

STRUCT INDICATOR_PANE
	{
	STRUCT indicators[];
	}

STRUCT INDICATOR
	{
	WORD uid;
	WORD npriority=0xffff;
	WORD wpriority=0xffff;
   	LTEXT bmpfile="";
	STRUCT states[];
	}

STRUCT INDICATOR_STATE
	{
	WORD id;
	STRUCT icons[];
	}

STRUCT INDICATOR_ICON
	{
	WORD narrowbmpid=0xffff;
	WORD narrowbmpmask=0xffff;
	WORD widebmpid=0xffff;
	WORD widebmpmask=0xffff;
	}

STRUCT AVKON_VIEW
	{
	LLINK hotkeys=0;
	LLINK menubar=0;
	LLINK cba=0;
	}

STRUCT AVKON_NOTE
	{
	WORD layout;
	LTEXT singular_label;
	LTEXT plural_label="";
	LTEXT imagefile="";
	WORD imageid=0xffff;
	WORD imagemask=0xffff;
	LTEXT iconfile="";
	WORD iconid=0xffff;
	WORD iconmask=0xffff;
	LLINK animation=0;
	WORD flags=0;  
	}

STRUCT NOTE_COMPONENT
	{
	WORD component_type;
	WORD x;
	WORD y;
	WORD width;
	WORD height;
	}

STRUCT NOTE
	{
	STRUCT components[];
	}

STRUCT AVKON_CONFIRMATION_QUERY
	{
	WORD layout;
	LTEXT label;
	LTEXT bmpfile="";
	WORD bmpid=0xffff;
	WORD bmpmask=0xffff;
	LLINK animation=0; 
	}

STRUCT AVKON_DATA_QUERY
	{
	WORD layout;
	LTEXT label;
	STRUCT control;
	}

STRUCT AVKON_MESSAGE_QUERY
    {
    LTEXT message = "";
    }

STRUCT AVKON_MULTI_LINE_DATA_QUERY
	{
	WORD layout;   
	LTEXT firstlabel;
	LLINK firstcontrol;
	LTEXT secondlabel;
	LLINK secondcontrol;
	}


 
 
 
 
 

STRUCT AVKON_LIST_QUERY_CONTROL
	{
	WORD listtype;  
	STRUCT listbox;  
	LTEXT heading = "";
	LTEXT bmpfile="";
	WORD bmpid=0xffff;
	WORD bmpmask=0xffff;
	LLINK animation=0;
	}

STRUCT AVKON_HEADING
	{
	LTEXT label = "";   
	LTEXT bmpfile="";
	WORD bmpid=0xffff;
	WORD bmpmask=0xffff;
	LLINK animation=0;
	LLINK headinglayout = R_AVKON_LIST_HEADING_PANE;
	}

 
STRUCT POPUP_FIELD
	{
	WORD flags=0;  
	WORD width=0;  
	LTEXT other="";  
	LLINK emptynote = 0;  
	LTEXT empty="";  
	LTEXT invalid = "";  
	}

STRUCT POPUP_FIELD_TEXT
	{
	STRUCT popupfield;  
	LLINK textarray = 0;  
	WORD active = 0;  
	}

STRUCT POPUP_FIELD_SELECTION_BMP
	{
	LTEXT bmpfile="";
	WORD bmpidon=0xffff;
	WORD bmpmaskon=0xffff;
	WORD bmpidoff=0xffff;
	WORD bmpmaskoff=0xffff;
	}

STRUCT SLIDER
	{
	WORD layout;
	WORD minvalue;
	WORD maxvalue;
	WORD step;
	WORD valuetype=EAknSliderValueBareFigure;
	WORD decimalplaces=0;
	LTEXT singular_valuelabel = "";
	LTEXT minlabel="";
	LTEXT maxlabel="";
	LTEXT valuelabel="";
    LLINK graphical_image=0;
	}

STRUCT VOLUME
	{
	WORD flags;
	WORD value;
	LTEXT bmpfile="";
	WORD bmpid=0xffff;
	WORD bmpmask=0xffff;
	}

STRUCT NUMSECRETED
	{
 	WORD num_code_chars=8;
	}

STRUCT GRID_STYLE
	{
	WORD layoutflags = 0;
	WORD primaryscroll = 0;
	WORD secondaryscroll = 0;
	WORD itemsinprimaryorient = 0;
	WORD itemsinsecondaryorient = 0;
	WORD height = 0;
	WORD width = 0;
	WORD gapwidth = 0;
	WORD gapheight = 0;
	}

STRUCT GRID
	{
	BYTE version = 0;
	WORD flags = 0;
	WORD height = 5;		 
	WORD width = 10;		 
	LLINK array_id = 0;
	LTEXT emptytext = "";
	LLINK style = 0; 
	}

STRUCT AVKON_SETTING_PAGE
	{
	WORD number = (-16380) ;
	LTEXT label;
	LTEXT hint_text;
	LLINK softkey_resource = 0;
	LLINK menubar= 0;
	WORD type=0xffff;
	LLINK editor_resource_id = 0;
	LLINK invalid_contents_softkey_resource = 0;
	LLINK extension = 0;
	}

STRUCT AVKON_SETTING_ITEM_LIST
	{
	WORD flags = 0;  
	LTEXT title = "";
	WORD initial_number = 1;
	STRUCT items[];
	}


STRUCT AVKON_SETTING_ITEM
	{
	WORD identifier = 0;
	LTEXT name ="";
	LLINK setting_page_resource = 0;
	WORD type=0xffff;  
	LLINK setting_editor_resource = 0;
	LLINK associated_resource = 0;
	LTEXT empty_item_text = "";
	LTEXT compulsory_ind_string = "";
	LLINK reserved = 0;   
	}

STRUCT AVKON_PASSWORD_CONFIRMATION
	{
	LLINK password_query_resource = 0;
	LLINK success_note_resource = 0;
	LLINK failure_note_resource = 0;
	}

STRUCT AVKON_ENUMERATED_TEXT
	{
	WORD value = 0 ;
	LTEXT text;
	}

STRUCT AVKON_POPUP_SETTING_TEXTS
	{
	WORD flags = 0;
	LLINK setting_texts_resource = 0;
	LLINK popped_up_texts_resource = 0;
	LLINK reserved = 0;
	}

STRUCT AVKON_SEARCH_FIELD
	{
	}

STRUCT AVKON_LISTBOX_LINES
	{
	STRUCT vline1;
	STRUCT vline2;
	STRUCT hline;
	}

 
STRUCT BMPANIM_DATA
	{
	WORD frameinterval	= -1;
	WORD playmode		= 0;
	BYTE flash		= 0;
	LTEXT bmpfile		= "";
	LLINK frames		= 0;
	LLINK backgroundframe	= 0;
 	}

STRUCT BMPANIM_FRAME
	{
	WORD time		= -1;
	WORD posx		= 0;
	WORD posy		= 0;
	WORD bmpid		= -1;
	WORD maskid		= -1;
	}



 
 
 
 
 

 
STRUCT AVKON_LB_LAYOUT_POS
	{
	WORD l= (-16380) ; 
	WORD t= (-16380) ; 
	WORD r= (-16380) ; 
	WORD b= (-16380) ; 
	WORD W= (-16380) ; 
	WORD H= (-16380) ;
	}

 
STRUCT AVKON_LB_LAYOUT_GFX
	{
	WORD id;
	WORD C= (-16380) ;
	WORD l= (-16380) ;
	WORD t= (-16380) ;
	WORD r= (-16380) ;
	WORD b= (-16380) ;
	WORD W= (-16380) ;
	WORD H= (-16380) ;
	}

 
STRUCT AVKON_LB_LAYOUT_TEXT
	{
	WORD id;
	WORD font; WORD C; WORD lm; WORD rm;  WORD B; WORD W; WORD align;
	}

 
STRUCT AVKON_LAYOUT_CONTROL
	{
	WORD C= (-16380) ;
	WORD l= (-16380) ;
	WORD t= (-16380) ;
	WORD r= (-16380) ;
	WORD b= (-16380) ;
	WORD W= (-16380) ;
	WORD H= (-16380) ;
	}

 
STRUCT AVKON_LAYOUT_RECT
	{
	WORD C= (-16380) ;
	WORD l= (-16380) ;
	WORD t= (-16380) ;
	WORD r= (-16380) ;
	WORD b= (-16380) ;
	WORD W= (-16380) ;
	WORD H= (-16380) ;
	}

 


STRUCT AVKON_LAYOUT_TEXT
	{
	WORD font;
	WORD C;
	WORD l;
	WORD r;
	WORD B;
	WORD W;
	WORD J;
	}

 
STRUCT AVKON_LAYOUT_EDWIN
	{
	WORD font;
	WORD C;
	WORD l;
	WORD r;
	WORD B;
	WORD W;
	WORD J;
	WORD lines=1;    
	WORD nextB=0;    
	}

 
STRUCT AVKON_LAYOUT_LABEL
	{
	WORD font;
	WORD C;
	WORD l;
	WORD r;
	WORD B;
	WORD W;
	WORD J;
	WORD nextB=0;
	}

 
STRUCT AVKON_LAYOUT_FORM_FIELD_POPUP_PANE
	{
	WORD font;
	WORD C = (-16380) ;
	WORD l = (-16380) ;
	WORD t = (-16380) ;
	WORD r = (-16380) ;
	WORD b = (-16380) ;
	WORD W = (-16380) ;
	WORD H1 = (-16380) ;
	WORD H2 = (-16380) ;
	WORD H3 = (-16380) ;
	WORD H4 = (-16380) ;
	WORD H5 = (-16380) ;
	WORD H6 = (-16380) ;
	WORD lines = 1;    
	}

STRUCT AVKON_LB_LAYOUT_AREA
	{
	WORD id;
	WORD x1; WORD y1;
	WORD x2; WORD y2;
	}

STRUCT AVKON_LB_LAYOUT_COMMAND
	{
	WORD id;
	WORD cmd;
	WORD data=0;	
	}

 
 
STRUCT AVKON_LAYOUT_MANAGER
	{
	STRUCT gfx[];   
	STRUCT text[];  
	STRUCT cmds[];  
	STRUCT area[];  
	STRUCT pos;      
	}

 
STRUCT AVKON_CONFIG_EDWIN
	{
	WORD editingSpace;	   
	WORD editingWindow;    
	WORD characterCase;    
	WORD justification;    
	WORD allowedToMoveInsertionPoint; 
	WORD cursorYesNo;
	WORD overflowYesNo;
	}


STRUCT AVKON_CBA_BUTTON
	{
	BYTE version= 10 ;
	WORD id=0;
	WORD longpressid=0;
   	LTEXT txt="";
	LTEXT bmpfile="";
  	WORD bmpid=0xffff;		 
	WORD bmpmask=0xffff;	 
	}
 

STRUCT SPECIAL_CHAR_TABLE
	{
	STRUCT contents[];  
	}


STRUCT SCT_CHAR_SET
	{
	WORD id;
	LTEXT chars = "";
	}



 
 
 
 
STRUCT AKN_ICON_ARRAY
	{
	WORD type = EAknIconArraySimple;
	 
	LTEXT bmpfile;
	 
	STRUCT icons[];
	}

STRUCT AKN_ICON_ARRAY_ARRAY
	{
	WORD type = EAknIconArrayComplex;
	STRUCT iconarrays[];  
	}


 
 
 
 
STRUCT AKN_ICON
	{
	 
	LONG iconId;
	 
	LONG maskId;
	}

 


STRUCT AVKON_SOUND_INFO
	{
	WORD sid;
	WORD priority = EAvkonKeyClickPriority;
	LONG preference = EAvkonKeyClickPreference;
	LTEXT file="";
	WORD frequency=0;
	LONG ms=0;
	WORD sequencelength=0;
	BYTE sequence[];
	BYTE volume=9;  
	}

STRUCT AVKON_SOUND_INFO_LIST 
	{
	STRUCT list[];
	}

STRUCT AVKON_SKEY_INFO
	{
	WORD sid = EAvkonSIDDefaultSound;
	WORD key;
	BYTE type = ESKeyTypeShort;
	}

STRUCT AVKON_SKEY_LIST
	{
	STRUCT list[];
	}

STRUCT PHONE_NUMBER_EDITOR
	{
	WORD maxChars=30;
	WORD maxLines;
	LTEXT truncation="";
	STRUCT formats[];
	}

STRUCT PHONE_NUMBER_EDITOR_FORMAT
	{
	WORD top;
	WORD left;
	WORD bottom;
	WORD right;
	LONG border=0;
	WORD lines;
	WORD bottomBaselineOffset;
	WORD baselineSeparation;
	WORD font;
	}

 
STRUCT POPUP_SETTING_LIST
	{
	WORD flags;  
	WORD width;  
	LTEXT other="Other ...";
	LTEXT empty_text="No options";
	LLINK new_item_setting_page_resource = 0;  
	WORD type=0xffff;				
	LLINK new_item_setting_editor_resource = 0;
	}

 
 
STRUCT AVKON_LIST_QUERY
    {
    LONG flags = ((0x001 | 0x200  | 0x040  | 0x2000 ) ) ;
    LTEXT xxxx1 = "";
    LLINK xxxx2 = 0;
    LLINK softkeys = R_AVKON_SOFTKEYS_OK_CANCEL;  
    STRUCT items[];  
    LLINK xxxx3 = 0;
    }

STRUCT AVKON_MULTISELECTION_LIST_QUERY
    {
    LONG flags = ((0x001 | 0x200  | 0x040  | 0x2000 ) ) ;
    LTEXT xxxx1 = "";
    LLINK xxxx2 = 0;
    LLINK softkeys = R_AVKON_SOFTKEYS_OK_CANCEL;  
    STRUCT items[];  
    LLINK xxxx3 = 0;
    }

STRUCT AVKON_LIST_QUERY_DLG_LINE
    {
    WORD type = EAknCtListQueryControl;
    LTEXT prompt = "";
    WORD id = EListQueryControl;
    LONG itemflags = 0;
    STRUCT control;  
    LTEXT trailer = "";
    LTEXT bmpfile = "";
    WORD bmpid = 0xffff;
    WORD bmpmask = 0xffff;
    LTEXT tooltip = "";
    }

STRUCT AVKON_MULTISELECTION_LIST_QUERY_DLG_LINE
    {
    WORD type = EAknCtListQueryControl;
    LTEXT prompt = "";
    WORD id = EListQueryControl;
    LONG itemflags = 0;
    STRUCT control;  
    LTEXT trailer = "";
    LTEXT bmpfile = "";
    WORD bmpid = 0xffff;
    WORD bmpmask = 0xffff;
    LTEXT tooltip = "";
    }


STRUCT AVKON_LIST_QUERY_LIST
    {
    BYTE version = 0;
    WORD flags = ((0x0080 ) ) ;
    WORD height = 5;
    WORD width = 10;
    LLINK array_id = 0;
    }

STRUCT AVKON_MULTISELECTION_LIST_QUERY_LIST
    {
    BYTE version = 0;
    WORD flags = ((0x0080 )  | 0x0001   | 0x2000 ) ;
    WORD height = 5;
    WORD width = 10;
    LLINK array_id = 0;    
    }

 
STRUCT AVKON_SELECTION_LIST
    {
    BYTE version = 0;
    WORD flags = ((0x0080 ) ) ;
    WORD height = 5;
    WORD width = 10;
    LLINK array_id = 0;
    }
STRUCT AVKON_MARKABLE_LIST
    {
    BYTE version = 0;
    WORD flags = ((0x0080 )  | 0x0001   | 0x4000 ) ;
    WORD height = 5;
    WORD width = 10;
    LLINK array_id = 0;
    }

STRUCT AVKON_MULTISELECTION_LIST
    {
    BYTE version = 0;
    WORD flags = ((0x0080 )  | 0x0001   | 0x2000 ) ;
    WORD height = 5;
    WORD width = 10;
    LLINK array_id = 0;
    }

STRUCT AVKON_MENU_LIST
    {
    BYTE version = 0;
    WORD flags = ((0x0080 ) ) ;
    WORD height = 5;
    WORD width = 10;
    LLINK array_id = 0;
    }

STRUCT AVKON_INTEGER_EDWIN
	{
    WORD maxlength = 0;
	LONG min =			 -99999999;
	LONG max =			  99999999;
	LONG unset_value=	-100000000;
	LLINK extension1 = 0;
	LLINK extension2 = 0;
	}



 


STRUCT AKN_NOTE_WRAPPER
    {
     
    LLINK resId;
     
    LONG timeout;
     
    WORD  tone=-1;
     
    LTEXT text="";
    }

 
STRUCT AKN_SELECTION_LIST
    {
    WORD flags = 0;  
    WORD listbox = EAknCtSingleListBox;  
    LLINK menubar = 0;  
    LLINK dialogresource = R_AKN_SELECTION_LIST_DIALOG;
    }

STRUCT AVKON_UNUSED
	{
	}
# 16 "" 2

# 1 "/home/martin/symbian-sdks/gnupoc-s60_12/epoc32/include/avkon.rsg" 1





























































































































































































































































































































































# 17 "" 2

# 1 "/home/martin/symbian-sdks/gnupoc-s60_12/epoc32/include/avkon.loc" 1
 
















































 


 

 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 



 

 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 



 

 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 
 


 
 
 
 
 



 

 
 


 

 
 


 
 


 

 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 



 

 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 
 


 
 
 
 
 

 
 
 


 
 
 
 


 
 
 
 



 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 



 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 



 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 



 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 




 
 
 
 


 

 
 
 


 
 
 



 
 
 


 
 
 


 
 
 


 
 
 





 
 
 


 
 
 


 
 
 


 
 
 


 
 
 


 
 
 


 
 
 


 
 
 


 
 
 


 
 
 


 
 
 


 
 
 


 
 
 
 


 
 
 


 
 
 


 
 
 


 
 
 


 
 
 


 
 
 


 
 
 


 
 
 


 
 
 


 
 
 


 
 
 
 


 
 
 
 


 
 
 


 
 
 


 
 
 
 


 
 
 
 


 
 
 


 
 
 



 

 
 
 
 
 
 
 


 
 
 
 



 

 
 
 


 
 
 


 
 
 
 
 


 
 
 


 
 
 


 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 


 
 
 


 
 
 
 


 
 
 
 
 
 


 
 
 
 
 


 
 
 


 
 
 
 


 
 
 


 
 
 


 
 
 


 
 
 


 
 
 


 
 
 


 
 
 
 


 
 
 


 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 


 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 


 
 
 
 


 
 
 


 
 
 
 
 
 


 
 
 
 
 
 


 
 
 
 
 
 


 
 
 
 
 
 


 
 
 
 


 
 
 
 
 
 
 


 
 
 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 
 


 
 
 


 
 
 


 
 
 


 
 
 
 
 
 


 
 
 
 


 
 
 
 
 
 


 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 



 
 
 
 
 


 
 
 
 


 
 
 
 
 


 
 
 
 



 
 
 
 
 


 
 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 



 
 
 
 



 
 
 
 
 



 
 
 
 
 
 



 
 
 


 
 
 


 
 
 
 


 
 
 
 


 
 
 




 

 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 
 


 
 
 
 
 


 
 
 
 


 
 
 
 
 


 
 
 
 
 


 
 
 


 
 
 


 
 
 


 
 


 
 
 
 
 


 
 
 
 


 
 
 
 


 
 
 
 



# 1724 "/home/martin/symbian-sdks/gnupoc-s60_12/epoc32/include/avkon.loc"



 
 
 
 


 
 
 
 


 
 
 
 


 
 
 



 
 
 
 


 
 
 
 


 
 
 



 
 
 
 


 
 
 
 


 
 
 
 
 


 
 
 
 


 

# 18 "" 2

# 1 "/home/martin/symbian-sdks/gnupoc-s60_12/series60ex/slider/inc/aknexslider.hrh" 1
 










enum TAknExSliderMenuCommands
    {
    EAknExSliderCmdEmpty,
    EAknExSliderCmdLayout       = 0x6000,
    EAknExSliderCmdLayout1,
    EAknExSliderCmdLayout2,
    EAknExSliderCmdLayout3,
    EAknExSliderCmdViewMode     = 0x6020,
    EAknExSliderCmdKeyEvent     = 0x6030,
    EAknExSliderCmdKeyEvent1,
    EAknExSliderCmdKeyEvent2,
    EAknExSliderCmdKeyEvent3,
    EAknExSliderCmdForm         = 0x6040,
    EAknExSliderCmdReturn       = 0x6050,
    EAknExSliderCmdSetting      = 0x6060,
    EAknExSliderCmdSetMinimum,
    EAknExSliderCmdSetMaximum,
    EAknExSliderCmdSetRange,
    EAknExSliderCmdSetValue,
    EAknExSliderCmdSetStep,
    EAknExSliderCmdValueChanged = 0x6070,
    EAknExSliderCmdValueType    = 0x6080,
    EAknExSliderCmdTypeNotShown,
    EAknExSliderCmdTypeBare,
    EAknExSliderCmdTypePercent,
    EAknExSliderCmdTypeFraction,
    EAknExSliderCmdTypeDecimal,
    EAknExSliderCmdValueText    = 0x6090
    };

enum TAknExSliderDlgId
    {
    EAknExSliderDlgId = 0x100
    };
    

enum TAknExSliderCba
    {
    EAknExSliderCbaCmdNext = 0x6300
    };



 
# 19 "" 2

# 1 "/home/martin/symbian-sdks/gnupoc-s60_12/series60ex/slider/inc/aknexslider.loc" 1
 







 

 



 












 




 




 







 






 


 


 











 


 
 
 


























 
 


 

# 20 "" 2



 











 


 

 
 
 
 
 
 
 
RESOURCE RSS_SIGNATURE
    {
    }

 
 
 
 
 
 
 
RESOURCE TBUF16
    {
    buf = "AknExSlider";
    }

 
 
 
 
 
 
 
RESOURCE EIK_APP_INFO
    {
    menubar =r_aknexslider_menubar;
    cba = r_aknexslider_cba_options_next;
    hotkeys = r_aknexslider_hotkeys;
    status_pane = 0x8cc0033 ;
    }

 
 
 
 
 
 
 
RESOURCE HOTKEYS r_aknexslider_hotkeys
    {
    control =
        {
        HOTKEY
            {
            command = EAknCmdExit;
            key = 'e' ;
            }
        };
    }

 
 
 
 
 
 
 
RESOURCE MENU_BAR r_aknexslider_menubar
    {
    titles =
        {
        MENU_TITLE
            {
            menu_pane = r_aknexslider_menu;
            }
        };
    }

 
 
 
 
 
 
 
RESOURCE MENU_PANE r_aknexslider_menu
    {
    items =
        {
        MENU_ITEM
            {
            command = EAknExSliderCmdLayout;
            cascade = r_aknexslider_option_layout;
            txt = "Layout" ;
            },
        MENU_ITEM
            {
            command = EAknExSliderCmdViewMode;
            txt = "ViewMode" ;
            },
        MENU_ITEM
            {
            command = EAknExSliderCmdForm;
            txt = "Form" ;
            },
        MENU_ITEM
            {
            command = EAknExSliderCmdReturn;
            txt = "Return value" ;
            },
        MENU_ITEM
            {
            command = EAknExSliderCmdSetting;
            cascade = r_aknexslider_option_setting;
            txt = "Setting" ;
            },
        MENU_ITEM
            {
            command = EAknExSliderCmdValueChanged;
            txt = "Value changed" ;
            },
        MENU_ITEM
            {
            command = EAknExSliderCmdValueType;
            cascade = r_aknexslider_option_valuetype;
            txt = "Value types" ;
            },
        MENU_ITEM
            {
            command = EAknExSliderCmdValueText;
            flags = 0x0002 ;
            txt = "Value text" ;
            },
        MENU_ITEM
            {
            command = EAknCmdExit;
            txt = "Exit" ;
            }
        };
    }

 
 
 
 
 
 
 
RESOURCE MENU_PANE r_aknexslider_option_layout
    {
    items =
        {
        MENU_ITEM
            {
            command = EAknExSliderCmdLayout1;
            txt = "Layout1" ;
            },
        MENU_ITEM
            {
            command = EAknExSliderCmdLayout2;
            txt = "Layout2" ;
            },
        MENU_ITEM
            {
            command = EAknExSliderCmdLayout3;
            txt = "Layout3" ;
            }
        };
    }

 
 
 
 
 
 
 
RESOURCE MENU_PANE r_aknexslider_option_keyevent
    {
    items =
        {
        MENU_ITEM
            {
            command = EAknExSliderCmdKeyEvent1;
            txt = "Key event1" ;
            },
        MENU_ITEM
            {
            command = EAknExSliderCmdKeyEvent2;
            txt = "key event2" ;
            },
        MENU_ITEM
            {
            command = EAknExSliderCmdKeyEvent3;
            txt = "key event3" ;
            }
        };
    }

 
 
 
 
 
 
 
RESOURCE MENU_PANE r_aknexslider_option_setting
    {
    items =
        {
        MENU_ITEM
            {
            command = EAknExSliderCmdSetMinimum;
            txt = "Minimum" ;
            },
        MENU_ITEM
            {
            command = EAknExSliderCmdSetMaximum;
            txt = "Maximum" ;
            },
        MENU_ITEM
            {
            command = EAknExSliderCmdSetRange;
            txt = "Range" ;
            },
        MENU_ITEM
            {
            command = EAknExSliderCmdSetValue;
            txt = "Current value" ;
            },
        MENU_ITEM
            {
            command = EAknExSliderCmdSetStep;
            txt = "Step size" ;
            }
        };
    }

 
 
 
 
 
 
 
RESOURCE MENU_PANE r_aknexslider_option_valuetype
    {
    items =
        {
        MENU_ITEM
            {
            command = EAknExSliderCmdTypeNotShown;
            txt = "Not shown" ;
            },
        MENU_ITEM
            {
            command = EAknExSliderCmdTypeBare;
            txt = "Bare" ;
            },
        MENU_ITEM
            {
            command = EAknExSliderCmdTypePercent;
            txt = "Percent" ;
            },
        MENU_ITEM
            {
            command = EAknExSliderCmdTypeFraction;
            txt = "Fraction" ;
            },
        MENU_ITEM
            {
            command = EAknExSliderCmdTypeDecimal;
            txt = "Decimal" ;
            }
        };
    }

 
 
 
 
 
 
 
RESOURCE SLIDER r_aknexslider_slider_layout1
    {
    layout = EAknFormSliderLayout1;
    minvalue = 0 ;
    maxvalue = 100 ;
    step = 2 ;
    }

 
 
 
 
 
 
 
RESOURCE SLIDER r_aknexslider_slider_layout2
    {
    layout = EAknFormSliderLayout2;
    minvalue = 0 ;
    maxvalue = 100 ;
    step = 2 ;
    minlabel = "Dark" ;
    maxlabel = "Bright" ;
    }

 
 
 
 
 
 
 
RESOURCE SLIDER r_aknexslider_slider_layout3
    {
    layout = EAknFormSliderLayout3;
    minvalue = 0 ;
    maxvalue = 100 ;
    step = 2 ;
    minlabel = "MIN" ;
    maxlabel = "MAX" ;
    }

 
 
 
 
 
 
 
RESOURCE SLIDER r_aknexslider_slider_layout5
    {
    layout = EAknFormSliderLayout2;
    minvalue = 0 ;
    maxvalue = 100 ;
    step = 2 ;
    minlabel = "MIN" ;
    maxlabel = "MAX" ;
    }

 
 
 
 
 
 
 
RESOURCE SLIDER r_aknexslider_slider_layout_value_notshown
    {
    layout = EAknFormSliderLayout1;
    minvalue = 100 ;
    maxvalue = 200 ;
    step = 2 ;
    valuetype = EAknSliderValueNone;
    }

 
 
 
 
 
 
 
RESOURCE SLIDER r_aknexslider_slider_layout_value_bare
    {
    layout = EAknFormSliderLayout1;
    minvalue = 100 ;
    maxvalue = 200 ;
    step = 2 ;
    valuetype = EAknSliderValueBareFigure;
    }

 
 
 
 
 
 
 
RESOURCE SLIDER r_aknexslider_slider_layout_value_percent
    {
    layout = EAknFormSliderLayout1;
    minvalue = 100 ;
    maxvalue = 200 ;
    step = 2 ;
    valuetype = EAknSliderValuePercentage;
    }

 
 
 
 
 
 
 
RESOURCE SLIDER r_aknexslider_slider_layout_value_fraction
    {
    layout = EAknFormSliderLayout1;
    minvalue = 100 ;
    maxvalue = 200 ;
    step = 2 ;
    valuetype = EAknSliderValueFraction;
    }

 
 
 
 
 
 
 
RESOURCE SLIDER r_aknexslider_slider_layout_value_decimal
    {
    layout = EAknFormSliderLayout1;
    minvalue = 100 ;
    maxvalue = 200 ;
    step = 2 ;
    valuetype = EAknSliderValueDecimal;
    decimalplaces = 1 ;
    }

 
 
 
 
 
 
 
RESOURCE SLIDER r_aknexslider_slider_layout_text_value_notshown
    {
    layout = EAknFormSliderLayout1;
    minvalue = 0 ;
    maxvalue = 200 ;
    step = 2 ;
    valuetype = EAknSliderValueNone;
    valuelabel = "%U Series60" ;
    }

 
 
 
 
 
 
 
RESOURCE SLIDER r_aknexslider_slider_layout_text_value_bare
    {
    layout = EAknFormSliderLayout1;
    minvalue = 0 ;
    maxvalue = 200 ;
    step = 2 ;
    valuetype = EAknSliderValueBareFigure;
    valuelabel = "%U Series60" ;
    }

 
 
 
 
 
 
 
RESOURCE SLIDER r_aknexslider_slider_layout_text_value_percent
    {
    layout = EAknFormSliderLayout1;
    minvalue = 0 ;
    maxvalue = 200 ;
    step = 2 ;
    valuetype = EAknSliderValuePercentage;
    valuelabel = "%U Series60" ;
    }

 
 
 
 
 
 
 
RESOURCE SLIDER r_aknexslider_slider_layout_text_value_fraction
    {
    layout = EAknFormSliderLayout1;
    minvalue = 0 ;
    maxvalue = 200 ;
    step = 2 ;
    valuetype = EAknSliderValueFraction;
    valuelabel = "%U Series60" ;
    }

 
 
 
 
 
 
 
RESOURCE SLIDER r_aknexslider_slider_layout_text_value_decimal
    {
    layout = EAknFormSliderLayout1;
    minvalue = 0 ;
    maxvalue = 200 ;
    step = 2 ;
    valuetype = EAknSliderValueDecimal;
    decimalplaces = 1 ;
    valuelabel = "%U Series60" ;
    }

 
 
 
 
 
 
 
RESOURCE DIALOG r_aknexslider_slider_form_dialog
    {
    flags = 0x200  | 0x1000  |
            0x008  | 0x040  |
            0x2000 ;
    buttons =  0x8cc0017  ;
    form = r_aknexslider_slider_form;
    }

 
 
 
 
 
 
 
RESOURCE FORM r_aknexslider_slider_form
    {
    items =
        { 
        DLG_LINE
            {
            type=EAknCtSlider;
            prompt = "value" ;
            id = EAknExSliderDlgId ;
            control = SLIDER
                {
                layout = EAknFormSliderLayout1;
                minvalue = 0 ;
                maxvalue = 100 ;
                step = 2 ;
                };
            }
        };
    }

 
 
 
 
 
 
 
RESOURCE TBUF256 r_aknexslider_app_title
    {
    buf = "Slider\nSample Application" ;
    }

 
 
 
 
 
 
 
RESOURCE TBUF256 r_aknexslider_info_layout1
    {
    buf = "With current value." ;
    }

 
 
 
 
 
 
 
RESOURCE TBUF256 r_aknexslider_info_layout2
    {
    buf = "With minimum & maximum \nlabels." ;
    }

 
 
 
 
 
 
 
RESOURCE TBUF256 r_aknexslider_info_layout3
    {
    buf = "With current value and\nminimum & maximum labels." ;
    }


 
 
 
 
 
 
 
RESOURCE TBUF256 r_aknexslider_info_viewmode
    {
    buf = "View mode in slider.\nYou don't change current\nvalue of slider.\nOnly display." ;
    }

 
 
 
 
 
 
 
RESOURCE TBUF256 r_aknexslider_info_keyevent1
    {
    buf = "Press left or right key.\nCan be adjust value." ;
    }

 
 
 
 
 
 
 
RESOURCE TBUF256 r_aknexslider_info_keyevent2
    {
    buf = "Keep pressing left or right\nkey.(Cause key repeat\nevent)\nSteps 1/10 of the total\namount." ;
    }

 
 
 
 
 
 
 
RESOURCE TBUF256 r_aknexslider_info_keyevent3
    {
    buf = "Press left or right key.\nCan't be between steps." ;
    }

 
 
 
 
 
 
 
RESOURCE TBUF256 r_aknexslider_info_form
    {
    buf = "Slider inside form" ;
    }

 
 
 
 
 
 
 
RESOURCE TBUF256 r_aknexslider_info_return
    {
    buf = "Current value : %d\n\nPress left or right key.\nAnd press OK key.\nReturn current value." ;
    }

 
 
 
 
 
 
 
RESOURCE TBUF256 r_aknexslider_info_header
    {
    buf = "Press OK key.\nHeading text is changed." ;
    }

 
 
 
 
 
 
 
RESOURCE TBUF256 r_aknexslider_info_minimum
    {
    buf = "Press OK key.\nMinimum text is changed." ;
    }

 
 
 
 
 
 
 
RESOURCE TBUF256 r_aknexslider_info_maximum
    {
    buf = "Press OK key.\nMaximum text is changed." ;
    }

 
 
 
 
 
 
 
RESOURCE TBUF256 r_aknexslider_info_range
    {
    buf = "Minimum value : %d\nMaximum value : %d\n\nPress OK key." ;
    }

 
 
 
 
 
 
 
RESOURCE TBUF256 r_aknexslider_info_value
    {
    buf = "Current value : %d\n\nPress OK key.\nCurrent value is changed!" ;
    }

 
 
 
 
 
 
 
RESOURCE TBUF256 r_aknexslider_info_step
    {
    buf = "Now step size : %d\n\nPress OK key.\nAnd press left or right key.\nStep size is changed!" ;
    }

 
 
 
 
 
 
 
RESOURCE TBUF256 r_aknexslider_info_valuechanged
    {
    buf = "Current value : %d\n\nPress left or right key." ;
    }

 
 
 
 
 
 
 
RESOURCE TBUF256 r_aknexslider_info_valuetype
    {
    buf = "Current value : %d\n\nMinimum value : 100\nMaximum value : 200" ;
    }

 
 
 
 
 
 
 
RESOURCE TBUF256 r_aknexslider_info_valuetype_decimal
    {
    buf = "Current value : %4.1lf\n\nMinimum value : 10.0\nMaximum value : 20.0" ;
    }

 
 
 
 
 
 
 
RESOURCE TBUF256 r_aknexslider_info_valuetext_notshown
    {
    buf = "value type : not shown" ;
    }

 
 
 
 
 
 
 
RESOURCE TBUF256 r_aknexslider_info_valuetext_bare
    {
    buf = "value type : bare figure" ;
    }

 
 
 
 
 
 
 
RESOURCE TBUF256 r_aknexslider_info_valuetext_percent
    {
    buf = "value type : percentage" ;
    }

 
 
 
 
 
 
 
RESOURCE TBUF256 r_aknexslider_info_valuetext_fraction
    {
    buf = "value type : fraction" ;
    }

 
 
 
 
 
 
 
RESOURCE TBUF256 r_aknexslider_info_valuetext_decimal
    {
    buf = "value type : decimal" ;
    }

 
 
 
 
 
 
 
RESOURCE TBUF256 r_aknexslider_info_operation
    {
    buf = "Press right softkey to\ndisplay next sample" ;
    }


 
 
 
 
 
 
 
RESOURCE TBUF256 r_aknexslider_label_min1
    {
    buf = "MIN" ;
    }

 
 
 
 
 
 
 
RESOURCE TBUF256 r_aknexslider_label_min2
    {
    buf = "min" ;
    }

 
 
 
 
 
 
 
RESOURCE TBUF256 r_aknexslider_label_max1
    {
    buf = "MAX" ;
    }

 
 
 
 
 
 
 
RESOURCE TBUF256 r_aknexslider_label_max2
    {
    buf = "max" ;
    }

 
 
 
 
 
 
 
RESOURCE TBUF256 r_aknexslider_label_low1
    {
    buf = "LOW" ;
    }

 
 
 
 
 
 
 
RESOURCE TBUF256 r_aknexslider_label_low2
    {
    buf = "low" ;
    }

 
 
 
 
 
 
 
RESOURCE TBUF256 r_aknexslider_label_high1
    {
    buf = "HIGH" ;
    }

 
 
 
 
 
 
 
RESOURCE TBUF256 r_aknexslider_label_high2
    {
    buf = "high" ;
    }

 
 
 
 
 
 
 

RESOURCE CBA r_aknexslider_cba_options_next
    {
    buttons =
        {
        CBA_BUTTON 
            {
            id=EAknSoftkeyOptions; 
            txt = "Options" ;
            },
        AVKON_CBA_BUTTON
            {
            id = EAknExSliderCbaCmdNext;
            txt = "Next" ;
            }
        };
    }

 
 
 
 
 
 
 
RESOURCE TBUF16 r_aknexslider_initail
    {
    buf = "AknExSlider" ;
    }

 
